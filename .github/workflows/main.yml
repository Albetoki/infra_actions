name: Django-app workflow

on: [push]

jobs:
  Tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        cd infra_project/
        python manage.py test

  # Собрать и отправить образ приложения на DockerHub
  Build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: Tests

    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub 
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: albetoki/sprint_16:v1

# Тут ваши задачи установка на боевой сервер - version2
  Deploy:
    runs-on: ubuntu-latest
    needs: Build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          sudo docker pull albetoki/sprint_16:lastest
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker run --rm -d -p 5000:5000 albetoki/sprint_16:latest

  Send_message:
    runs-on: ubuntu-latest
    needs: Deploy
    steps:
      - name: notification
        if: cancelled() == false
        uses: xinthink/action-telegram@v1.1
        with:
          botToken: ${{ secrets.TELEGRAM_TOKEN }}
          chatId: ${{ secrets.TELEGRAM_TO }}
          jobStatus: ${{ job.status }}
